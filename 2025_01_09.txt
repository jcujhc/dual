EXTEND
-------------------------------------------
df -h
lsblk
pvresize /dev/vdb
lvextend -l +100%FREE /dev/vgdb/db00
resize2fs /dev/vgdb/db00
df -h


## DATATAFILES
## -------------------------------------------------------------

SQL> select file_name, bytes/1024/1024 from dba_data_files;

FILE_NAME                                                    BYTES/1024/1024
------------------------------------------------------------ ---------------
/u01/app/oracle/oradata/TDB1/system01.dbf                                950
/u01/app/oracle/product/data2/TDB1/sysaux01.dbf                         1580
/u01/app/oracle/product/data2/TDB1/undotbs01.dbf                         345
/u01/app/oracle/product/data2/TDB1/users01.dbf                             5
/u01/app/oracle/product/data2/TDB1/newtbs01.dbf                         2048
/u01/app/oracle/product/data2/dual2024.dbf                               200

SQL> ALTER DATABASE MOVE DATAFILE '/u01/app/oracle/oradata/TDB1/undotbs01.dbf' to '/u01/app/oracle/product/data2/TDB1/undotbs01.dbf';

Database altered.


## TEMP
## -----------------------

SQL> select FILE_NAME,TABLESPACE_NAME from dba_temp_files;

FILE_NAME
--------------------------------------------------------------------------------
TABLESPACE_NAME
------------------------------
/u01/app/oracle/oradata/TDB1/temp01.dbf
TEMP

SQL> alter tablespace TEMP add tempfile '/u01/app/oracle/product/data2/TDB1/temp01.dbf' size 2G;

Tablespace altered.

SQL> alter database tempfile '/u01/app/oracle/oradata/TDB1/temp01.dbf' drop;

Database altered.

[oracle@jcuj ~]$ cd /u01/app/oracle/oradata/TDB1
[oracle@jcuj TDB1]$ ls -ltr
total 2707412
-rw-r-----. 1 oracle oinstall 2154831872 Dec 11 22:00 temp01.dbf
-rw-r-----. 1 oracle oinstall  209715712 Jan  2 14:09 redo01.log
-rw-r-----. 1 oracle oinstall  209715712 Jan  2 14:39 redo02.log
-rw-r-----. 1 oracle oinstall  209715712 Jan  2 14:40 redo03.log
-rw-r-----. 1 oracle oinstall   10600448 Jan  2 14:40 control01.ctl
-rw-r-----. 1 oracle oinstall   10600448 Jan  2 14:40 control02.ctl
[oracle@jcuj TDB1]$ rm -rf temp01.dbf


SQL> archive log list;

## BACKUP
sqlplus / as sysdba
shu immediate;
startup mount;
alter database archivelog; 
alter database open;

mkdir /u01/app/oracle/product/backup
alter system set db_recovery_file_dest_size = 20G;
alter system set db_recovery_file_dest = /u01/app/oracle/product/backup

rman target /
backup database archivelog all delete input;


## CREATE CONTAINER DB
---------------------------------------------
dbca -silent -createDatabase \
 -templateName General_Purpose.dbc \
 -gdbname cdb3 -sid cdb3 -responseFile NO_VALUE \
 -characterSet AL32UTF8 \
 -sysPassword start123 \
 -systemPassword start123 \
 -createAsContainerDatabase true \
 -numberOfPDBs 1 \
 -pdbName pdb3 \
 -pdbAdminPassword start123 \
 -databaseType MULTIPURPOSE \
 -memoryMgmtType auto_sga \
 -totalMemory 1536 \
 -storageType FS \
 -datafileDestination "/u01/app/oracle/product/data2" \
 -redoLogFileSize 20 \
 -emConfiguration NONE \
 -ignorePreReqs


export ORACLE_SID=cdb3
export ORACLE_PDB_SID=pdb3


## MIGRATE DATABASE -> Using DBMS_PDB
---------------------------------------------
export ORACLE_SID=tDB1
sqlplus / as sysdba

SHUTDOWN IMMEDIATE;
STARTUP OPEN READ ONLY;

-- Describe the non-DBC using the DBMS_PDB.DESCRIBE procedure. This procedure creates 
-- an XML file in the same way that the unplug operation does for a PDB.

BEGIN
  DBMS_PDB.DESCRIBE(
    pdb_descr_file => '/tmp/tDB1.xml');
END;
/

-- Shutdown the non-CDB database.
export ORACLE_SID=tDB1
sqlplus / as sysdba
SHUTDOWN IMMEDIATE;

-- Connect to an existing CDB and create a new PDB using the file describing the non-CDB database. 
-- Remember to configure the FILE_NAME_CONVERT parameter to convert the existing files to the new location.

## ?????? ---> mkdir /u01/app/oracle/product/data2/cdb3/pdb6/

export ORACLE_SID=cdb3
sqlplus / as sysdba

CREATE PLUGGABLE DATABASE pdb6 USING '/tmp/tDB1.xml'
  COPY
  FILE_NAME_CONVERT = ('/u01/app/oracle/product/data2/TDB1/', '/u01/app/oracle/product/data2/cdb3/pdb6/');

-- Switch to the PDB container and run the "$ORACLE_HOME/rdbms/admin/noncdb_to_pdb.sql" 
-- script to clean up the new PDB, removing any items that should not be present in a PDB. 
-- You can see an example of the output produced by this script here.

ALTER SESSION SET CONTAINER=pdb6;
@$ORACLE_HOME/rdbms/admin/noncdb_to_pdb.sql

-- Startup the PDB and check the open mode.

ALTER SESSION SET CONTAINER=pdb6;
ALTER PLUGGABLE DATABASE OPEN;
SELECT name, open_mode FROM v$pdbs;

NAME                           OPEN_MODE
------------------------------ ----------
PDB6                           READ WRITE



# pouzita docu: https://oracle-base.com/articles/12c/multitenant-migrate-non-cdb-to-pdb-12cr1


## WITH link
## https://oracle-base.com/articles/12c/multitenant-clone-remote-pdb-or-non-cdb-12cr1
--------------------------------------------- ---------------------------------------------


LISTENER
---------------------
LISTENER_DBATEST =
(DESCRIPTION_LIST =
(DESCRIPTION =
(ADDRESS = (PROTOCOL = TCP)(HOST = dbatest-host)(PORT = 1573))
(ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1573))
)
)
ENABLE_GLOBAL_DYNAMIC_ENDPOINT_PDB_LISTENER=ON # line added by Agent
VALID_NODE_CHECKING_REGISTRATION_PDB_LISTENER=SUBNET # line added by Agent

lsnrctl start LISTENER_DBATEST



SQL> alter session set container=PDB1;

Session altered.

SQL> show con_name

CON_NAME
--------
PDB1


SQL> alter system set listener_networks='(( NAME=net1)(LOCAL_LISTENER=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=dbatest-host)(PORT =1573)))))' scope=both;

System altered.

SQL> alter system register;

System altered.


lsnrctl status LISTENER_DBATEST

## ADD THE BELOW TNS ENTRY:
-------------------------------------------
PDB1 =
(DESCRIPTION =
(ADDRESS = (PROTOCOL = TCP)(HOST = dbatest-host)(PORT = 1573))
(CONNECT_DATA =
(SERVER = DEDICATED)
(SERVICE_NAME = pdb1)
)
)


sqlplus sys/oracle@PDB1 as sysdba









